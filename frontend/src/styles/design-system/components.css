/**
 * Components - 组件样式
 * 定义可复用的组件样式和微动画效果
 */

/* ========== 卡片组件 ========== */
.card {
  background: var(--gradient-card);
  backdrop-filter: var(--backdrop-blur);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-lg);
  padding: var(--spacing-6);
  transition: all var(--duration-300) var(--ease-out);
  position: relative;
  overflow: hidden;
}

.card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
  z-index: 1;
}

.card:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-2xl);
  border-color: rgba(255, 255, 255, 0.3);
}

.card-glass {
  background: var(--gradient-glass);
  backdrop-filter: var(--backdrop-blur);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.card-primary {
  background: linear-gradient(145deg, rgba(94, 114, 228, 0.1), rgba(94, 114, 228, 0.05));
  border-color: rgba(94, 114, 228, 0.2);
}

.card-primary:hover {
  box-shadow: var(--shadow-primary);
  border-color: rgba(94, 114, 228, 0.3);
}

.card-success {
  background: linear-gradient(145deg, rgba(45, 206, 137, 0.1), rgba(45, 206, 137, 0.05));
  border-color: rgba(45, 206, 137, 0.2);
}

.card-success:hover {
  box-shadow: var(--shadow-success);
  border-color: rgba(45, 206, 137, 0.3);
}

/* ========== 按钮组件 ========== */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-2);
  padding: var(--spacing-3) var(--spacing-6);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  line-height: 1;
  border-radius: var(--radius-lg);
  border: 1px solid transparent;
  cursor: pointer;
  transition: all var(--duration-200) var(--ease-out);
  position: relative;
  overflow: hidden;
  text-decoration: none;
  white-space: nowrap;
  user-select: none;
  -webkit-user-select: none;
}

.btn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none !important;
}

.btn:focus-visible {
  outline: none;
  box-shadow: var(--focus-ring);
}

/* 按钮涟漪效果 */
.btn::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: width var(--duration-300) var(--ease-out), height var(--duration-300) var(--ease-out);
  z-index: 0;
}

.btn:active::before {
  width: 300px;
  height: 300px;
}

.btn > * {
  position: relative;
  z-index: 1;
}

/* 按钮变体 */
.btn-primary {
  background: var(--gradient-primary);
  color: white;
  box-shadow: var(--shadow-md);
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-primary);
}

.btn-primary:active {
  transform: translateY(0);
}

.btn-secondary {
  background: var(--gradient-glass);
  backdrop-filter: var(--backdrop-blur);
  color: var(--color-gray-700);
  border-color: rgba(255, 255, 255, 0.2);
}

.btn-secondary:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: translateY(-1px);
  box-shadow: var(--shadow-lg);
}

.btn-success {
  background: var(--gradient-success);
  color: white;
  box-shadow: var(--shadow-md);
}

.btn-success:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-success);
}

.btn-warning {
  background: linear-gradient(135deg, var(--color-warning) 0%, var(--color-warning-dark) 100%);
  color: white;
  box-shadow: var(--shadow-md);
}

.btn-warning:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-warning);
}

.btn-danger {
  background: linear-gradient(135deg, var(--color-danger) 0%, var(--color-danger-dark) 100%);
  color: white;
  box-shadow: var(--shadow-md);
}

.btn-danger:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-danger);
}

.btn-ghost {
  background: transparent;
  color: var(--color-gray-600);
  border-color: var(--color-gray-300);
}

.btn-ghost:hover {
  background: var(--color-gray-50);
  color: var(--color-gray-800);
  border-color: var(--color-gray-400);
}

/* 按钮尺寸 */
.btn-sm {
  padding: var(--spacing-2) var(--spacing-4);
  font-size: var(--font-size-xs);
  border-radius: var(--radius-md);
}

.btn-lg {
  padding: var(--spacing-4) var(--spacing-8);
  font-size: var(--font-size-base);
  border-radius: var(--radius-xl);
}

.btn-xl {
  padding: var(--spacing-5) var(--spacing-10);
  font-size: var(--font-size-lg);
  border-radius: var(--radius-2xl);
}

/* ========== 输入框组件 ========== */
.input {
  appearance: none;
  background-color: rgba(255, 255, 255, 0.8);
  backdrop-filter: var(--backdrop-blur-sm);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-lg);
  padding: var(--spacing-3) var(--spacing-4);
  font-size: var(--font-size-sm);
  line-height: var(--line-height-normal);
  color: var(--color-gray-900);
  width: 100%;
  transition: all var(--duration-200) var(--ease-out);
  position: relative;
}

.input:focus {
  outline: none;
  background-color: rgba(255, 255, 255, 0.95);
  border-color: var(--color-primary);
  box-shadow: var(--focus-ring), 0 0 0 1px var(--color-primary);
  transform: translateY(-1px);
}

.input:disabled {
  background-color: var(--color-gray-100);
  color: var(--color-gray-500);
  cursor: not-allowed;
  opacity: 0.6;
}

.input-error {
  border-color: var(--color-danger);
  background-color: rgba(245, 54, 92, 0.05);
}

.input-error:focus {
  border-color: var(--color-danger);
  box-shadow: var(--focus-ring-danger), 0 0 0 1px var(--color-danger);
}

.input-success {
  border-color: var(--color-success);
  background-color: rgba(45, 206, 137, 0.05);
}

.input-success:focus {
  border-color: var(--color-success);
  box-shadow: var(--focus-ring-success), 0 0 0 1px var(--color-success);
}

/* ========== 选择框组件 ========== */
.select {
  appearance: none;
  background: rgba(255, 255, 255, 0.8) url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e") no-repeat right var(--spacing-3) center / 16px 16px;
  backdrop-filter: var(--backdrop-blur-sm);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-lg);
  padding: var(--spacing-3) var(--spacing-10) var(--spacing-3) var(--spacing-4);
  font-size: var(--font-size-sm);
  line-height: var(--line-height-normal);
  color: var(--color-gray-900);
  width: 100%;
  transition: all var(--duration-200) var(--ease-out);
  cursor: pointer;
}

.select:focus {
  outline: none;
  background-color: rgba(255, 255, 255, 0.95);
  border-color: var(--color-primary);
  box-shadow: var(--focus-ring), 0 0 0 1px var(--color-primary);
  transform: translateY(-1px);
}

/* ========== 标签组件 ========== */
.tag {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-1);
  padding: var(--spacing-1) var(--spacing-3);
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-medium);
  line-height: 1;
  border-radius: var(--radius-full);
  transition: all var(--duration-200) var(--ease-out);
  position: relative;
  overflow: hidden;
}

.tag::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  transition: left var(--duration-500) var(--ease-out);
}

.tag:hover::before {
  left: 100%;
}

.tag-primary {
  background: rgba(94, 114, 228, 0.1);
  color: var(--color-primary-dark);
  border: 1px solid rgba(94, 114, 228, 0.2);
}

.tag-success {
  background: rgba(45, 206, 137, 0.1);
  color: var(--color-success-dark);
  border: 1px solid rgba(45, 206, 137, 0.2);
}

.tag-warning {
  background: rgba(251, 99, 64, 0.1);
  color: var(--color-warning-dark);
  border: 1px solid rgba(251, 99, 64, 0.2);
}

.tag-danger {
  background: rgba(245, 54, 92, 0.1);
  color: var(--color-danger-dark);
  border: 1px solid rgba(245, 54, 92, 0.2);
}

.tag-info {
  background: rgba(17, 205, 239, 0.1);
  color: var(--color-info-dark);
  border: 1px solid rgba(17, 205, 239, 0.2);
}

.tag-gray {
  background: rgba(148, 163, 184, 0.1);
  color: var(--color-gray-600);
  border: 1px solid rgba(148, 163, 184, 0.2);
}

/* ========== 进度条组件 ========== */
.progress {
  width: 100%;
  height: var(--spacing-2);
  background: rgba(148, 163, 184, 0.2);
  border-radius: var(--radius-full);
  overflow: hidden;
  position: relative;
}

.progress-bar {
  height: 100%;
  background: var(--gradient-primary);
  border-radius: var(--radius-full);
  transition: width var(--duration-500) var(--ease-out);
  position: relative;
  overflow: hidden;
}

.progress-bar::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
  animation: shimmer 2s infinite;
}

@keyframes shimmer {
  0% { left: -100%; }
  100% { left: 100%; }
}

.progress-success .progress-bar {
  background: var(--gradient-success);
}

.progress-warning .progress-bar {
  background: linear-gradient(135deg, var(--color-warning) 0%, var(--color-warning-dark) 100%);
}

.progress-danger .progress-bar {
  background: linear-gradient(135deg, var(--color-danger) 0%, var(--color-danger-dark) 100%);
}

/* ========== 加载动画 ========== */
.loading-spinner {
  width: 20px;
  height: 20px;
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: currentColor;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.loading-dots {
  display: inline-flex;
  gap: var(--spacing-1);
}

.loading-dots span {
  width: 6px;
  height: 6px;
  background: currentColor;
  border-radius: 50%;
  animation: bounce-dots 1.4s ease-in-out infinite both;
}

.loading-dots span:nth-child(1) { animation-delay: -0.32s; }
.loading-dots span:nth-child(2) { animation-delay: -0.16s; }

@keyframes bounce-dots {
  0%, 80%, 100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1);
  }
}

/* ========== 骨架屏 ========== */
.skeleton {
  background: linear-gradient(90deg, rgba(148, 163, 184, 0.1) 25%, rgba(148, 163, 184, 0.2) 50%, rgba(148, 163, 184, 0.1) 75%);
  background-size: 200% 100%;
  animation: skeleton-loading 2s infinite;
  border-radius: var(--radius-md);
}

@keyframes skeleton-loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

.skeleton-text {
  height: 1em;
  margin-bottom: var(--spacing-2);
}

.skeleton-text:last-child {
  margin-bottom: 0;
  width: 60%;
}

.skeleton-avatar {
  width: 40px;
  height: 40px;
  border-radius: 50%;
}

.skeleton-card {
  height: 200px;
}

/* ========== 通知样式 ========== */
.notification {
  background: var(--gradient-card);
  backdrop-filter: var(--backdrop-blur);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-xl);
  padding: var(--spacing-4);
  margin-bottom: var(--spacing-3);
  animation: slide-in-right var(--duration-300) var(--ease-out);
  position: relative;
  overflow: hidden;
}

.notification::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 4px;
  background: var(--color-primary);
}

.notification-success::before {
  background: var(--color-success);
}

.notification-warning::before {
  background: var(--color-warning);
}

.notification-danger::before {
  background: var(--color-danger);
}

.notification-info::before {
  background: var(--color-info);
}

@keyframes slide-in-right {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* ========== 模态框样式 ========== */
.modal-overlay {
  position: fixed;
  inset: 0;
  background: rgba(15, 23, 42, 0.8);
  backdrop-filter: var(--backdrop-blur);
  z-index: var(--z-index-modal-backdrop);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-4);
  animation: fade-in var(--duration-200) var(--ease-out);
}

.modal-content {
  background: var(--gradient-card);
  backdrop-filter: var(--backdrop-blur);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: var(--radius-2xl);
  box-shadow: var(--shadow-2xl);
  max-width: 500px;
  width: 100%;
  max-height: 90vh;
  overflow-y: auto;
  animation: scale-in var(--duration-300) var(--ease-spring);
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes scale-in {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* ========== 工具提示 ========== */
.tooltip {
  position: relative;
}

.tooltip::before,
.tooltip::after {
  position: absolute;
  opacity: 0;
  pointer-events: none;
  transition: opacity var(--duration-200) var(--ease-out);
  z-index: var(--z-index-tooltip);
}

.tooltip::before {
  content: attr(data-tooltip);
  background: rgba(15, 23, 42, 0.9);
  backdrop-filter: var(--backdrop-blur);
  color: white;
  padding: var(--spacing-2) var(--spacing-3);
  border-radius: var(--radius-md);
  font-size: var(--font-size-xs);
  white-space: nowrap;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%) translateY(-4px);
}

.tooltip::after {
  content: '';
  border: 4px solid transparent;
  border-top-color: rgba(15, 23, 42, 0.9);
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
}

.tooltip:hover::before,
.tooltip:hover::after {
  opacity: 1;
}

/* ========== 空状态 ========== */
.empty-state {
  text-align: center;
  padding: var(--spacing-12) var(--spacing-6);
  color: var(--color-gray-500);
}

.empty-state-icon {
  width: 64px;
  height: 64px;
  margin: 0 auto var(--spacing-4);
  opacity: 0.5;
}

.empty-state-title {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--color-gray-700);
  margin-bottom: var(--spacing-2);
}

.empty-state-description {
  font-size: var(--font-size-sm);
  margin-bottom: var(--spacing-6);
}