"""Add Celery monitoring tables

Revision ID: 026900a1f5aa
Revises: 0c9b261a87d8
Create Date: 2025-08-14 04:13:05.091361

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '026900a1f5aa'
down_revision: Union[str, None] = '0c9b261a87d8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('celery_beat_health',
    sa.Column('beat_pid', sa.Integer(), nullable=True),
    sa.Column('beat_version', sa.String(length=50), nullable=True),
    sa.Column('is_alive', sa.Boolean(), nullable=False),
    sa.Column('last_heartbeat', sa.DateTime(), nullable=False),
    sa.Column('cpu_percent', sa.Float(), nullable=True),
    sa.Column('memory_mb', sa.Float(), nullable=True),
    sa.Column('scheduled_tasks_count', sa.Integer(), nullable=True),
    sa.Column('executed_tasks_count', sa.Integer(), nullable=True),
    sa.Column('failed_tasks_count', sa.Integer(), nullable=True),
    sa.Column('errors', sa.JSON(), nullable=True),
    sa.Column('warnings', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_beat_alive_heartbeat', 'celery_beat_health', ['is_alive', 'last_heartbeat'], unique=False)
    op.create_index(op.f('ix_celery_beat_health_id'), 'celery_beat_health', ['id'], unique=False)
    op.create_index(op.f('ix_celery_beat_health_is_alive'), 'celery_beat_health', ['is_alive'], unique=False)
    op.create_table('celery_task_monitor',
    sa.Column('task_id', sa.String(length=255), nullable=False),
    sa.Column('task_name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('result', sa.JSON(), nullable=True),
    sa.Column('received_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('worker_name', sa.String(length=255), nullable=True),
    sa.Column('queue_name', sa.String(length=100), nullable=True),
    sa.Column('runtime_seconds', sa.Float(), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('traceback', sa.Text(), nullable=True),
    sa.Column('error_category', sa.String(length=100), nullable=True),
    sa.Column('args', sa.JSON(), nullable=True),
    sa.Column('kwargs', sa.JSON(), nullable=True),
    sa.Column('eta', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_queue_status', 'celery_task_monitor', ['queue_name', 'status'], unique=False)
    op.create_index('idx_task_name_created', 'celery_task_monitor', ['task_name', 'created_at'], unique=False)
    op.create_index('idx_task_status_created', 'celery_task_monitor', ['status', 'created_at'], unique=False)
    op.create_index('idx_worker_completed', 'celery_task_monitor', ['worker_name', 'completed_at'], unique=False)
    op.create_index(op.f('ix_celery_task_monitor_error_category'), 'celery_task_monitor', ['error_category'], unique=False)
    op.create_index(op.f('ix_celery_task_monitor_id'), 'celery_task_monitor', ['id'], unique=False)
    op.create_index(op.f('ix_celery_task_monitor_queue_name'), 'celery_task_monitor', ['queue_name'], unique=False)
    op.create_index(op.f('ix_celery_task_monitor_status'), 'celery_task_monitor', ['status'], unique=False)
    op.create_index(op.f('ix_celery_task_monitor_task_id'), 'celery_task_monitor', ['task_id'], unique=True)
    op.create_index(op.f('ix_celery_task_monitor_task_name'), 'celery_task_monitor', ['task_name'], unique=False)
    op.create_table('retry_statistics',
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('task_name', sa.String(length=255), nullable=False),
    sa.Column('error_category', sa.String(length=100), nullable=False),
    sa.Column('total_tasks', sa.Integer(), nullable=True),
    sa.Column('failed_tasks', sa.Integer(), nullable=True),
    sa.Column('retry_tasks', sa.Integer(), nullable=True),
    sa.Column('success_after_retry', sa.Integer(), nullable=True),
    sa.Column('failure_rate', sa.Float(), nullable=True),
    sa.Column('retry_success_rate', sa.Float(), nullable=True),
    sa.Column('avg_runtime_seconds', sa.Float(), nullable=True),
    sa.Column('avg_retry_delay', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_date_task_category', 'retry_statistics', ['date', 'task_name', 'error_category'], unique=False)
    op.create_index(op.f('ix_retry_statistics_date'), 'retry_statistics', ['date'], unique=False)
    op.create_index(op.f('ix_retry_statistics_error_category'), 'retry_statistics', ['error_category'], unique=False)
    op.create_index(op.f('ix_retry_statistics_id'), 'retry_statistics', ['id'], unique=False)
    op.create_index(op.f('ix_retry_statistics_task_name'), 'retry_statistics', ['task_name'], unique=False)
    op.create_table('worker_statistics',
    sa.Column('worker_name', sa.String(length=255), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('processed_tasks', sa.Integer(), nullable=True),
    sa.Column('successful_tasks', sa.Integer(), nullable=True),
    sa.Column('failed_tasks', sa.Integer(), nullable=True),
    sa.Column('avg_cpu_percent', sa.Float(), nullable=True),
    sa.Column('avg_memory_mb', sa.Float(), nullable=True),
    sa.Column('peak_memory_mb', sa.Float(), nullable=True),
    sa.Column('total_runtime_seconds', sa.Float(), nullable=True),
    sa.Column('avg_task_runtime', sa.Float(), nullable=True),
    sa.Column('uptime_seconds', sa.Float(), nullable=True),
    sa.Column('restart_count', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_worker_date', 'worker_statistics', ['worker_name', 'date'], unique=False)
    op.create_index(op.f('ix_worker_statistics_date'), 'worker_statistics', ['date'], unique=False)
    op.create_index(op.f('ix_worker_statistics_id'), 'worker_statistics', ['id'], unique=False)
    op.create_index(op.f('ix_worker_statistics_worker_name'), 'worker_statistics', ['worker_name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_worker_statistics_worker_name'), table_name='worker_statistics')
    op.drop_index(op.f('ix_worker_statistics_id'), table_name='worker_statistics')
    op.drop_index(op.f('ix_worker_statistics_date'), table_name='worker_statistics')
    op.drop_index('idx_worker_date', table_name='worker_statistics')
    op.drop_table('worker_statistics')
    op.drop_index(op.f('ix_retry_statistics_task_name'), table_name='retry_statistics')
    op.drop_index(op.f('ix_retry_statistics_id'), table_name='retry_statistics')
    op.drop_index(op.f('ix_retry_statistics_error_category'), table_name='retry_statistics')
    op.drop_index(op.f('ix_retry_statistics_date'), table_name='retry_statistics')
    op.drop_index('idx_date_task_category', table_name='retry_statistics')
    op.drop_table('retry_statistics')
    op.drop_index(op.f('ix_celery_task_monitor_task_name'), table_name='celery_task_monitor')
    op.drop_index(op.f('ix_celery_task_monitor_task_id'), table_name='celery_task_monitor')
    op.drop_index(op.f('ix_celery_task_monitor_status'), table_name='celery_task_monitor')
    op.drop_index(op.f('ix_celery_task_monitor_queue_name'), table_name='celery_task_monitor')
    op.drop_index(op.f('ix_celery_task_monitor_id'), table_name='celery_task_monitor')
    op.drop_index(op.f('ix_celery_task_monitor_error_category'), table_name='celery_task_monitor')
    op.drop_index('idx_worker_completed', table_name='celery_task_monitor')
    op.drop_index('idx_task_status_created', table_name='celery_task_monitor')
    op.drop_index('idx_task_name_created', table_name='celery_task_monitor')
    op.drop_index('idx_queue_status', table_name='celery_task_monitor')
    op.drop_table('celery_task_monitor')
    op.drop_index(op.f('ix_celery_beat_health_is_alive'), table_name='celery_beat_health')
    op.drop_index(op.f('ix_celery_beat_health_id'), table_name='celery_beat_health')
    op.drop_index('idx_beat_alive_heartbeat', table_name='celery_beat_health')
    op.drop_table('celery_beat_health')
    # ### end Alembic commands ###
